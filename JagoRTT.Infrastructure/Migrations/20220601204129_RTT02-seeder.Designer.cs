// <auto-generated />
using System;
using JagoRTT.Infrastructure.DBConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JagoRTT.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220601204129_RTT02-seeder")]
    partial class RTT02seeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JagoRTT.domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30479b7b-fd49-4fa4-8a75-7849524e3e3b"),
                            CNPJ = "32.654.744/0001-16",
                            Email = "ncp@gmail.com",
                            Name = "NCP",
                            Phone = "11 0000-0999"
                        },
                        new
                        {
                            Id = new Guid("f72af8f4-3b32-45c4-a9e1-fc8cbcdafc0d"),
                            CNPJ = "60.446.716/0001-49",
                            Email = "newschool@gmail.com",
                            Name = "New School",
                            Phone = "11 7600-0779"
                        });
                });

            modelBuilder.Entity("JagoRTT.domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RentalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ToolId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RentalId");

                    b.HasIndex("ToolId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("JagoRTT.domain.Entities.Rental", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ToolId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ToolId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("JagoRTT.domain.Entities.Tool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tools");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e7275b0-97be-459b-bc6d-e55082665de5"),
                            Brand = 1,
                            Model = "i5",
                            Name = "laptop",
                            QuantityInStock = 3
                        },
                        new
                        {
                            Id = new Guid("38b82414-bd8f-4317-8440-d5329028989d"),
                            Brand = 2,
                            Model = "i5",
                            Name = "laptop",
                            QuantityInStock = 3
                        },
                        new
                        {
                            Id = new Guid("54698a84-a1fe-421e-ad73-65bda9540b3b"),
                            Brand = 3,
                            Model = "i5",
                            Name = "laptop",
                            QuantityInStock = 3
                        },
                        new
                        {
                            Id = new Guid("60242ace-c5fe-4f48-9c90-a16b137d5ca5"),
                            Brand = 4,
                            Model = "i5",
                            Name = "laptop",
                            QuantityInStock = 2
                        });
                });

            modelBuilder.Entity("JagoRTT.domain.Entities.Employee", b =>
                {
                    b.HasOne("JagoRTT.domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JagoRTT.domain.Entities.Rental", "Rental")
                        .WithMany()
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JagoRTT.domain.Entities.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Rental");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("JagoRTT.domain.Entities.Rental", b =>
                {
                    b.HasOne("JagoRTT.domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JagoRTT.domain.Entities.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Tool");
                });
#pragma warning restore 612, 618
        }
    }
}
